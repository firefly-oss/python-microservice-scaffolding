openapi: 3.0.3
info:
  title: FastAPI
  version: 0.1.0
paths:
  /health:
    get:
      tags:
      - health
      summary: Get Health Status Endpoint
      description: 'API endpoint to check the health of the service.


        This endpoint calls the health controller to get the application''s

        status and returns it in a JSON response.'
      operationId: get_health_status_endpoint_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openapi:
    get:
      tags:
      - health
      summary: Download OpenAPI YAML
      description: 'Serves the pre-built OpenAPI YAML file for API Gateway import

        (and for developers to download).'
      operationId: download_openapi_yaml_openapi_get
      responses:
        '200':
          description: Your full OpenAPI spec in YAML
          content:
            application/json:
              schema: {}
  /items:
    get:
      tags:
      - Items
      summary: Get All Items
      description: API endpoint to retrieve all items.
      operationId: get_all_items_items_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemRead'
                type: array
                title: Response Get All Items Items Get
    post:
      tags:
      - Items
      summary: Create New Item
      description: 'API endpoint to create a new item.


        Receives item data in the request body, passes it to the controller,

        and returns the created item.'
      operationId: create_new_item_items_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /items/{item_id}:
    get:
      tags:
      - Items
      summary: Get Single Item
      description: API endpoint to retrieve a single item by its ID.
      operationId: get_single_item_items__item_id__get
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: integer
          title: Item Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemRead'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ItemCreate:
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
          title: Name
          description: The name of the item.
        description:
          anyOf:
          - type: string
            maxLength: 300
          - type: 'null'
          title: Description
          description: An optional description of the item.
      type: object
      required:
      - name
      title: ItemCreate
      description: 'The model for creating a new item.

        It excludes the ''id'' field, which is generated by the database.

        This is typically used for request bodies.'
    ItemRead:
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
          title: Name
          description: The name of the item.
        description:
          anyOf:
          - type: string
            maxLength: 300
          - type: 'null'
          title: Description
          description: An optional description of the item.
        id:
          type: integer
          title: Id
          description: The unique identifier of the item.
        priority:
          type: integer
          title: Priority
          description: The priority of the item.
      type: object
      required:
      - name
      - id
      - priority
      title: ItemRead
      description: 'The model for reading an item, including its ID.

        This is typically used for response bodies when retrieving items.'
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
